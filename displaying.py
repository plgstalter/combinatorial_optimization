import numpy as np
import matplotlib.pyplot as plt

t = np.arange(10, 410, 10)

x = list(range(7))
x[0] = [0.13,0.13,0.16,0.16,0.16,0.18,0.18,0.19,0.20,0.20,0.22,0.22,0.24,0.24,0.26,0.27,0.27,0.29,0.29,0.30,0.34,0.35,0.36,0.39,0.41,0.42,0.45,0.43,0.48,0.47,0.48,0.53,0.53,0.54,0.58,0.61,0.62,0.68,0.65,0.68]

x[1] = [0.14,0.14,0.14,0.16,0.18,0.18,0.20,0.20,0.21,0.22,0.23,0.25,0.25,0.26,0.28,0.29,0.21,0.24,0.25,0.25,0.27,0.28,0.29,0.30,0.31,0.32,0.36,0.36,0.39,0.42,0.44,0.43,0.45,0.46,0.54,0.50,0.56,0.55,0.62,0.63]

x[2] = [0.14,0.15,0.16,0.16,0.17,0.21,0.19,0.20,0.22,0.23,0.24,0.26,0.27,0.27,0.30,0.23,0.24,0.26,0.26,0.28,0.29,0.30,0.33,0.33,0.37,0.37,0.39,0.42,0.45,0.46,0.50,0.48,0.52,0.54,0.56,0.60,0.60,0.66,0.67,0.68]


x[3] =[ 0.13,0.14,0.15,0.17,0.18,0.19,0.20,0.21,0.22,0.24,0.25,0.26,0.27,0.29,0.32,0.25,0.27,0.28,0.28,0.30,0.33,0.33,0.34,0.39,0.39,0.40,0.44,0.47,0.48,0.52,0.55,0.55,0.59,0.63,0.67,0.66,0.70,0.74,0.76,0.78]

x[4] = [0.13,0.14,0.16,0.17,0.18,0.18,0.21,0.23,0.22,0.25,0.27,0.28,0.30,0.32,0.32,0.25,0.28,0.29,0.31,0.32,0.33,0.36,0.39,0.41,0.42,0.45,0.47,0.52,0.53,0.57,0.59,0.62,0.64,0.66,0.72,0.73,0.79,0.18,0.19,0.19]

x[5] =[ 0.13,0.15,0.16,0.16,0.17,0.19,0.20,0.22,0.24,0.26,0.27,0.30,0.30,0.32,0.35,0.27,0.29,0.33,0.35,0.34,0.38,0.38,0.44,0.42,0.47,0.48,0.52,0.58,0.57,0.66,0.63,0.69,0.71,0.75,0.79,0.19,0.20,0.20,0.17,0.16]


x[6] = [0.13,0.15,0.16,0.17,0.19,0.19,0.23,0.24,0.25,0.26,0.29,0.29,0.31,0.33,0.38,0.29,0.34,0.32,0.35,0.36,0.38,0.42,0.44,0.47,0.49,0.57,0.56,0.63,0.64,0.70,0.72,0.74,0.77,0.18,0.20,0.20,0.16,0.16,0.17,0.18]

#plt.figure();
#plt.title("evolution of computational time, Dijkstra's algorithm")
#for i in range(7):
    #plt.plot(t[:-7], x[i][:-7], label=str((i+3)/10));
#plt.legend()
#plt.savefig('ressources/dijkstra_res_graph_density.png')
#plt.show();

y = list(range(6))

y[0] = [0.12,0.12,0.13,0.14,0.16,0.17,0.18,0.18,0.20,0.22,0.22,0.24,0.26,0.27,0.30,0.31,0.32,0.35,0.36,0.39,0.42,0.44,0.47,0.49,0.52,0.54,0.57,0.60,0.64,0.67,0.70,0.73,0.24,0.24,0.28,0.20,0.21]

y[1] = [0.12,0.13,0.14,0.14,0.15,0.16,0.18,0.19,0.20,0.21,0.22,0.24,0.25,0.27,0.29,0.30,0.33,0.34,0.36,0.39,0.41,0.43,0.46,0.48,0.51,0.54,0.57,0.60,0.63,0.66,0.70,0.73,0.24,0.25,0.24,0.20,0.21]

y[2] = [0.12,0.13,0.13,0.14,0.16,0.17,0.17,0.19,0.20,0.21,0.22,0.24,0.25,0.27,0.29,0.30,0.32,0.37,0.36,0.40,0.41,0.44,0.46,0.48,0.52,0.55,0.57,0.61,0.63,0.66,0.70,0.73,0.24,0.25,0.26,0.20,0.21]

y[3] = [0.12,0.12,0.13,0.15,0.16,0.17,0.17,0.18,0.20,0.21,0.23,0.24,0.25,0.27,0.28,0.31,0.32,0.35,0.37,0.39,0.41,0.43,0.46,0.50,0.51,0.54,0.57,0.61,0.63,0.66,0.70,0.73,0.24,0.27,0.25,0.20,0.21]

y[4] = [0.12,0.12,0.13,0.15,0.15,0.17,0.18,0.19,0.20,0.21,0.22,0.25,0.25,0.27,0.29,0.30,0.32,0.35,0.36,0.38,0.41,0.43,0.46,0.49,0.52,0.54,0.57,0.61,0.63,0.66,0.71,0.74,0.24,0.24,0.25,0.20,0.21]

y[5] = [0.12,0.13,0.13,0.15,0.15,0.17,0.18,0.18,0.20,0.21,0.22,0.24,0.25,0.27,0.28,0.31,0.32,0.35,0.36,0.38,0.42,0.43,0.46,0.48,0.51,0.55,0.58,0.60,0.63,0.66,0.71,0.73,0.24,0.25,0.25,0.21,0.21]


#plt.figure();
#plt.title("evolution of computational time, Dijkstra's algorithm")
#for i in range(6):
    #plt.plot(t[:-9], y[i][:-6], label=str((i+3)/10));
#plt.legend()
#plt.savefig('ressources/dijkstra_density_std_graph.png')
#plt.show();

y = np.array(y)
Y = y[0] + y[1] + y[2] + y[3] + y[4] + y[5]
Y /= 6

x = np.array(x)
X = x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6]
X /= 7

#plt.figure();
#plt.title("evolution of computational time, Dijkstra's algorithm")
#plt.plot(t[:-9], Y[:-6], label="std_graph")
#plt.plot(t[:-9], X[:-9], label="graph")
#plt.legend()
#plt.savefig('ressources/comparing_graph__std_graph.png')
#plt.show();

plt.figure();
plt.title("std_graph")
plt.plot(t[:-9], Y[:-6], label="std_graph")
#plt.plot(t[:-9], x[0][:-9], label="graph")
#plt.legend()
plt.savefig('ressources/std_graph_mean.png')
plt.show();
